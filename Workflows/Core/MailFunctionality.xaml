<Activity mc:Ignorable="sap sap2010" x:Class="MailFunctionality" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_EmailList" Type="InArgument(scg:List(snm:MailMessage))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1399.3333333333333,1904.6666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MailFunctionality_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="43">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MailFunctionality" sap:VirtualizedContainerService.HintSize="653.3333333333334,1840" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EmailAddress" />
      <Variable x:TypeArguments="x:String" Name="EmailText" />
      <Variable x:TypeArguments="x:Int32" Name="CheckEmailErrorCode" />
      <Variable x:TypeArguments="x:String" Name="ContractPath" />
      <Variable x:TypeArguments="x:String" Name="CodecademyAccountPassword" />
      <Variable x:TypeArguments="x:String" Name="CourseraAccountPassword" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="591.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;MailFunctionality has started&quot;]" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="591.3333333333334,1457.3333333333333" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[in_EmailList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="Email" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="554.6666666666666,1328" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Receives mail and verifies if it was sent correctly&#xA;If not sends a mail back with the mistake" DisplayName="Workflows\Story 3\CheckInfo_ComposeEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="492.6666666666667,160.66666666666666" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflows\Story 3\CheckInfo_ComposeEmail.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <OutArgument x:TypeArguments="x:Int32" x:Key="out_errorCode">
                  <VisualBasicReference x:TypeArguments="x:Int32" ExpressionText="CheckEmailErrorCode" />
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_emailAddress">
                  <VisualBasicReference x:TypeArguments="x:String" ExpressionText="EmailAddress" />
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_responseEmail">
                  <VisualBasicReference x:TypeArguments="x:String" ExpressionText="EmailText" />
                </OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="out_contract_path">
                  <VisualBasicReference x:TypeArguments="x:String" ExpressionText="ContractPath" />
                </OutArgument>
                <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email">
                  <VisualBasicValue x:TypeArguments="snm:MailMessage" ExpressionText="Email" />
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <ui:IfElseIf DisplayName="If the received email is good" sap:VirtualizedContainerService.HintSize="492.6666666666667,1016.6666666666666" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
              <ui:IfElseIf.ConditionBlocks>
                <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                  <ui:IfElseIfBlock BlockType="If" Condition="[CheckEmailErrorCode = 0]">
                    <ui:IfElseIfBlock.Then>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="441.3333333333333,815.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Assigns a mentor to the new employee" DisplayName="Workflows\Story 5\AssignMentor.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379.3333333333333,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Story 5\AssignMentor.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_employeeEmail">[emailAddress]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creates accounts on:&#xA;- Codecademy&#xA;- Coursera" DisplayName="Workflows\Story 8\CreateAccountsForEmployee.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379.3333333333333,177.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflows\Story 8\CreateAccountsForEmployee.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_emailAddress">[emailAddress]</InArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_CodecademyAccountPassword">[CodecademyAccountPassword]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:String" x:Key="io_CourseraAccountPassword">[CourseraAccountPassword]</InOutArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Workflows\Story 1\ComposeEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379.3333333333333,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Workflows\Story 1\ComposeEmail.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_EmailAddress">
                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="EmailAddress" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="out_EmailText">
                              <VisualBasicReference x:TypeArguments="x:String" ExpressionText="EmailText" />
                            </OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CourseraPassword">
                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="CourseraAccountPassword" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_CodecademyPassword">
                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="CodecademyAccountPassword" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sends mail with/without attachements" DisplayName="Workflows\Story 2\SendEmail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379.3333333333333,146" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Workflows\Story 2\SendEmail.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="receiverAddress">[EmailAddress]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="subject">Welcome to Metamarian!</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="message">[EmailText]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="attachment">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ui:IfElseIfBlock.Then>
                  </ui:IfElseIfBlock>
                </sc:BindingList>
              </ui:IfElseIf.ConditionBlocks>
            </ui:IfElseIf>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="591.3333333333334,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;MailFunctionality has ended&quot;]" />
  </Sequence>
</Activity>